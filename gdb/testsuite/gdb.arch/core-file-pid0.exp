# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2023 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Some kernel core files have PID 0 (for the idle task), check that
# GDB can handle such a core file.

standard_testfile

# Set CF_NAME, the name of the compressed core file within the source
# tree, and CF_SIZE, the size (in bytes) of the uncompressed core
# file.
if {[istarget "x86_64-*-linux*"]} {
    set cf_name ${testfile}.x86-64.core.bz2
    set cf_size 8757248
} else {
    unsupported "no pre-generated core file for this target"
}

# Decompress the core file.
set corebz2file ${srcdir}/${subdir}/${cf_name}
set corefile [decompress_bz2 $corebz2file]
if { $corefile eq "" } {
    untested "failed to bunzip2 the core file"
    return -1
}

# Check the size of the decompressed core file.  Just for sanity.
file stat ${corefile} corestat
if { $corestat(size) != ${cf_size} } {
    untested "uncompressed core file is the wrong size"
    return -1
}

# Copy over the corefile if we are remote testing.
set corefile [gdb_remote_download host $corefile]

clean_restart

# Load the core file.  At one point GDB would assert, complaining that
# the inferior was nullptr.  For now we see a message about the
# current thread having terminated, this is because GDB gets confused
# and incorrectly deletes what should be the current thread.
gdb_test "core-file ${corefile}" \
    [multi_line \
	 "Core was generated by \[^\r\n\]+\\." \
	 "Program terminated with signal (?:11|SIGSEGV), Segmentation fault\\." \
	 "The current thread has terminated"] \
    "check core file termination reason"
